buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

version = '1.1.1'
group = 'fr.nathanael2611.modularvoicechat' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'ModularVoiceChat'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    options.encoding = 'UTF-8'
}

configurations {
    shade
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    accessTransformer = file('src/main/resources/META-INF/drawlife_at.cfg')


    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    compile fileTree(dir: 'libs', include: '*.jar')
}

repositories {
    flatDir {
        dirs 'libs'
    }
}



shadowJar {
    configurations = [project.configurations.shade]
    from sourceSets.main.allSource
    classifier ''
}

reobf {
    shadowJar {} // Reobfuscate the shadowed JAR
}
tasks.build.dependsOn reobfShadowJar
shadowJar.dependsOn('classes')
jar.finalizedBy('reobfJar')


idea { module { inheritOutputDirs = true } }

sourceSets {
    main {
        output.resourcesDir = output.classesDir
    }
}

